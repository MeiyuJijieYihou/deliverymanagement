<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhaofeng.deliverymanagement.repository.DeliveryMapper">
  <resultMap id="BaseResultMap" type="com.zhaofeng.deliverymanagement.model.entity.Delivery">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 28 16:26:20 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="truck_id" jdbcType="INTEGER" property="truckId" />
    <result column="driver_id" jdbcType="INTEGER" property="driverId" />
    <result column="delivery_time" jdbcType="TIMESTAMP" property="deliveryTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 28 16:26:20 CST 2019.
    -->
    id, truck_id, driver_id, delivery_time, created_time, user_id
  </sql>

  <resultMap id="DeliveryDetailMap" type="DeliveryPojo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <!--<result column="driver_id" jdbcType="INTEGER" property="driverId" />-->

    <!--<result column="truck_id" jdbcType="INTEGER" property="truckId" />-->

    <result column="license_plate" jdbcType="VARCHAR" property="licensePlate"/>
    <result column="driver_name" jdbcType="VARCHAR" property="driverName"/>
    <result column="delivery_time" jdbcType="TIMESTAMP" property="deliveryTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />


    <!--<association javaType="com.zhaofeng.deliverymanagement.model.entity.User" property="driver"-->
                 <!--column="driver_id" select="com.zhaofeng.deliverymanagement.repository.UserMapper.selectByPrimaryKey">-->
    <!--</association>-->
    <!--<association javaType="com.zhaofeng.deliverymanagement.model.entity.Truck" property="truck"-->
                 <!--column="truck_id" select="com.zhaofeng.deliverymanagement.repository.TruckMapper.selectByPrimaryKey">-->
    <!--</association>-->
    <collection column="id" ofType="com.zhaofeng.deliverymanagement.pojo.OrdersPojo" property="orderList" select="com.zhaofeng.deliverymanagement.repository.OrdersMapper.selectAllOrdersByDeliveryId" />
    <collection column="id" ofType="com.zhaofeng.deliverymanagement.model.dto.user.BaseUserMinimalDTO" property="loaderList" select="com.zhaofeng.deliverymanagement.repository.UserMapper.selectByDeliveryId" />

  </resultMap>

  <!--&lt;!&ndash; 根据用户id获取所有发货记录 &ndash;&gt;-->
  <!--<select id="selectDeliveryDetailByUserId" parameterType="java.lang.Integer" resultMap="DeliveryDetailMap">-->
  <!--select id, driver_id, truck_id, delivery_time-->
  <!--from delivery-->
  <!--where user_id = #{userId}-->
  <!--</select>-->

  <!-- 根据用户id获取所有发货记录 -->
  <select id="selectDeliveryByUserId" parameterType="java.lang.Integer" resultMap="DeliveryDetailMap">
    select d.id as id, realname as driver_name, license_plate, delivery_time, created_time
    from delivery d, user u, truck t
    where d.driver_id = u.id
    and d.truck_id = t.id
    and d.user_id = #{userId}
    order by created_time desc, delivery_time desc
  </select>

  <!-- 根据搜索参数获取发货记录 -->
  <select id="selectDeliveryBySearchParam" resultType="SimpleDeliveryPojo">
    select d.id, realname as driver_name, license_plate, delivery_time, created_time
    from delivery d, user u, truck t
    where d.driver_id = u.id
    and d.truck_id = t.id
    and d.user_id = #{userId}

    <choose>
      <when test="fromDate != null and toDate != null">
        and delivery_time between #{fromDate} and #{toDate}
      </when>
      <when test="fromDate == null and toDate != null">
        and delivery_time &lt; #{toDate}
      </when>
      <when test="fromDate != null and toDate == null">
        and delivery_time > #{fromDate}
      </when>
    </choose>
    <if test="licensePlate != null and licensePlate != ''">
      and license_plate like concat('%', #{licensePlate}, '%')
    </if>
    <if test="realname != null and realname != ''">
      and realname like concat('%', #{realname}, '%')
    </if>
    order by created_time desc, delivery_time desc
  </select>

</mapper>